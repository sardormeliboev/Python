
1. is_prime(n) funksiyasi
is_prime(n) funksiyasini hosil qiling (n > 0). Agar n soni tub bo'lsa True, aks holda False qiymat qaytarsin

def is_prime(n):
    if n < 2:
        return False
    for i in range(2, n):
        if n % i == 0:
            return False
    return True
  
digit_sum(k) funksiyasini yozing, u k sonining raqamlari yig'indisini hisoblaydi.

  def digit_sum(k):
    return sum(map(int, str(k)))

print(digit_sum(24))
print(digit_sum(502))  

3. 2 ning darajalari (2**k) 
Berilgan N sonidan oshmaydigan barcha 2 ning darajalarini (ya'ni, 2**k shaklidagi sonlarni) chop etuvchi funksiyani yozing.

def powers_of_two(N):
    result = []
    power = 1
    while 2 ** power <= N:
        result.append(2 ** power)
        power += 1
    return result
print(powers_of_two(10)) 

